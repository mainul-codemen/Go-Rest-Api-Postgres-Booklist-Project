# Specify the version for docker-compose.yml
version: "3.8"

# add the serivces needed (postgres,go)
services:
  postgres:
    container_name: postgres_for_book
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      # Optional: Give a name to the database, otherwise
      # use the default value POSTGRES_USER as a database name (user in this case.)
      # POSTGRES_DB: testdb
    ports:
      - "5430:5430"
    volumes:
      - dbdata:/var/lib/postgresql/data

  go:
    container_name: go_for_book
    # build the Dockerfile, alternatively use an image.
    build:
      context: .
    depends_on:
      - "postgres"

volumes:
  dbdata: # create the volume for persisting data.


  version: "3"
services:
  app:
    container_name: booklist_app
    build: .
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      # - api:/usr/src/app/
      - .:/go/src/Go-Rest-Api-Postgres-Booklist-Project

    working_dir: /go/src/Go-Rest-Api-Postgres-Booklist-Project
    depends_on:
      - fullstack-postgres
    networks:
      - fullstack

  fullstack-postgres:
    image: postgres:latest
    container_name: full_db_postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - "5432:5432"
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - fullstack

pgadmin:
  image: dpage/pgadmin4
  container_name: pgadmin_container
  environment:
    PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
    PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  depends_on:
    - fullstack-postgres
  ports:
    - "5050:80"
  networks:
    - fullstack
  restart: unless-stopped

volumes:
  api:
  database_postgres:

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge
